#!/usr/bin/bash
WORK_DIR="/home/cb"
SERIAL_PATH="/dev/ttyUSB0"
MODBUS_PATH="/dev/ttyUSB1"
BOOT_PIN=26
RESET_PIN=19
DEFAULT_FILE="dfu_cfg_default"
DEFAULT_FILE_URLS="dfu_cfg_default.urls"
JSON_FILE="dfu_config.json"
JSON_FILE_DUPLICATE="dfu_config.json.1"
KERNEL_FILE="F2837xS_sci_flash_kernel.txt"
KERNEL_FILE_DUPLICATE="F2837xS_sci_flash_kernel.txt.1"
DFU_FILE="serial_flash_programmer_dfu"
DFU_FILE_DUPLICATE="serial_flash_programmer_dfu.1"
MODBUS_FILE="modbus_rtu"
MODBUS_FILE_DUPLICATE="modbus_rtu.1"

export PATH=$PATH:/usr/local/bin/
cd $WORK_DIR
date=$(date "+%Y%m%d%H%M%S")
sudo rm -f *.log
echo "$date dfu process is started" | tee $WORK_DIR/dfu_3.log

if [ -e $WORK_DIR/soft-ap-file-server/uploads/$DEFAULT_FILE_URLS ]; then
	mv -f $WORK_DIR/soft-ap-file-server/uploads/$DEFAULT_FILE_URLS $WORK_DIR/$DEFAULT_FILE
fi
#rm -f dfu_list $JSON_FILE
rm -f dfu_list
wget -i dfu_cfg_default -o $WORK_DIR/dfu_1.log
RET_DEFAULT=$(cat $WORK_DIR/dfu_1.log)
echo $RET_DEFAULT
if [[ $RET_DEFAULT == *"ERROR 404"* ]]; then
	echo "ERROR 404"
	if [ -e $JSON_FILE_DUPLICATE ]; then
		mv -f $JSON_FILE_DUPLICATE $JSON_FILE
	fi
	if [ -e $JSON_FILE_DUPLICATE ]; then
		rm -f $JSON_FILE_DUPLICATE
	fi
	jq '.fota_status = "DownloadFailed:404"' $WORK_DIR/$JSON_FILE > $WORK_DIR/tmp.json && mv -f $WORK_DIR/tmp.json $WORK_DIR/$JSON_FILE
	exit 404 
fi
if [ -e $JSON_FILE_DUPLICATE ]; then
	mv -f $JSON_FILE_DUPLICATE $JSON_FILE
fi
if [ -e $JSON_FILE_DUPLICATE ]; then
	rm -f $JSON_FILE_DUPLICATE
fi
PING_ADDRESS=$(jq -r .dserver_ip $WORK_DIR/$JSON_FILE)
ping -c2 $PING_ADDRESS
if [ $? != 0 ]; then
	jq '.fota_status = "DownloadFailed:120"' $WORK_DIR/$JSON_FILE > $WORK_DIR/tmp.json && mv -f $WORK_DIR/tmp.json $WORK_DIR/$JSON_FILE
	echo "Network connection not healthy" | tee -a $WORK_DIR/dfu_3.log
	date=$(date "+%Y%m%d%H%M%S")
	echo "$date dfu process is done" | tee -a $WORK_DIR/dfu_3.log
	cat $WORK_DIR/dfu_1.log $WORK_DIR/dfu_3.log > $WORK_DIR/dfu_$date.log
	$WORK_DIR/dfu_cron_reg.sh
	exit 120
else
	echo "Network connection healthy" | tee -a $WORK_DIR/dfu_3.log
	if [ ! -e $SERIAL_PATH ]; then
		jq '.fota_status = "DownloadFailed:121"' $WORK_DIR/$JSON_FILE > $WORK_DIR/tmp.json && mv -f $WORK_DIR/tmp.json $WORK_DIR/$JSON_FILE
		echo "No serial driver for DFU" | tee -a $WORK_DIR/dfu_3.log
		date=$(date "+%Y%m%d%H%M%S")
		echo "$date dfu process is done" | tee -a $WORK_DIR/dfu_3.log
		cat $WORK_DIR/dfu_1.log $WORK_DIR/dfu_3.log > $WORK_DIR/dfu_$date.log
		$WORK_DIR/dfu_cron_reg.sh
		exit 121
	fi
fi
sleep 1

DYENP_FW_FILE=$(jq -r .fw_filename $WORK_DIR/$JSON_FILE)
echo "fw_filename $DYENP_FW_FILE"
rm -f DYENP*.txt
#rm -f $DYENP_FW_FILE
date=$(date "+%Y%m%d%H%M%S")
echo "$date Downloading process is started" | tee -a $WORK_DIR/dfu_3.log
jq '.fota_status = "Downloading"' $JSON_FILE > tmp.json && mv -f tmp.json $JSON_FILE
wget -i dfu_list -o $WORK_DIR/dfu_2.log
jq '.fota_status = "Downloaded"' $JSON_FILE > tmp.json && mv -f tmp.json $JSON_FILE
date=$(date "+%Y%m%d%H%M%S")
echo "$date Downloading process is done" | tee -a $WORK_DIR/dfu_3.log
sleep 1
if [ -e $KERNEL_FILE_DUPLICATE ]; then
	mv -f $KERNEL_FILE_DUPLICATE $KERNEL_FILE
fi
if [ -e $KERNEL_FILE_DUPLICATE ]; then
	rm -f $KERNEL_FILE_DUPLICATE
fi
if [ -e $DFU_FILE_DUPLICATE ]; then
	mv -f $DFU_FILE_DUPLICATE $DFU_FILE
fi
if [ -e $DFU_FILE_DUPLICATE ]; then
	rm -f $DFU_FILE_DUPLICATE
fi
chmod 755 $DFU_FILE
if [ -e $MODBUS_FILE_DUPLICATE ]; then
	mv -f $MODBUS_FILE_DUPLICATE $MODBUS_FILE
fi
if [ -e $MODBUS_FILE_DUPLICATE ]; then
	rm -f $MODBUS_FILE_DUPLICATE
fi
chmod 666 $JSON_FILE
chmod 755 $MODBUS_FILE
$WORK_DIR/$MODBUS_FILE $MODBUS_PATH $WORK_DIR | tee -a $WORK_DIR/dfu_3.log
sleep 1

gpio -g write $BOOT_PIN 0 ; gpio -g write $RESET_PIN 0 ; sleep 1 ; gpio -g write $RESET_PIN 1
sleep 1

check_keepalive=`ps -ef | grep -v 'grep' | grep $DFU_FILE | wc -l`
if [ "$check_keepalive" == "0" ]; then
	echo "$DFU_FILE not exist" | tee -a $WORK_DIR/dfu_3.log
else
	echo "$DFU_FILE alive" | tee -a $WORK_DIR/dfu_3.log
	sudo kill -9 $(ps aux | grep $DFU_FILE | awk '{print $2}')
	jq '.fota_status = "InstallationFailed:107"' $WORK_DIR/$JSON_FILE > $WORK_DIR/tmp.json && mv -f $WORK_DIR/tmp.json $WORK_DIR/$JSON_FILE
	echo "DFU duplicate" | tee -a $WORK_DIR/dfu_3.log
	sleep 30
fi

$WORK_DIR/dfu_cron_reg.sh
$WORK_DIR/$DFU_FILE -d f2837xS -k $WORK_DIR/$KERNEL_FILE -a $WORK_DIR/$DYENP_FW_FILE -b 9600 -p $SERIAL_PATH -v | tee -a $WORK_DIR/dfu_3.log
#sleep 1

gpio -g write $BOOT_PIN 1 ; gpio -g write $RESET_PIN 0 ; sleep 1 ; gpio -g write $RESET_PIN 1

date=$(date "+%Y%m%d%H%M%S")
echo "$date dfu process is done" | tee -a $WORK_DIR/dfu_3.log

cat dfu_1.log dfu_2.log dfu_3.log > dfu_$date.log
rm -f dfu_1.log dfu_2.log dfu_3.log
